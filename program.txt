macro Y (\f.(\x.f (x x)) (\x.f (x x)))
macro Z (\f.(\x.f (\v.((x x) v))) (\x.f (\v.((x x) v))))
macro S (\x.\y.\z.(x z) (y z))
macro K (\x.\y.x)
macro I (\x.x)
macro B (\x.\y.\z.x (y z))
macro C (\x.\y.\z.x z y)
macro W (\x.\y.x y y)
macro true \a.\b.a
macro false \a.\b.b
macro and \p.\q.p q p
macro or \p.\q.p p q
macro applicativeNot \p.\a.\b.p b a
macro normalNot \p.p (\a.\b.b) (\a.\b.a)
macro xor \a.\b.a (not b) b
macro if \p.\a.\b.p a b
macro zero \f.\x.x
macro succ \n.\f.\x.f (n f x)
macro pred \n.\f.\x.n (\g.\h.h (g f)) (\u.x) (\u.u)
macro plus \m.\n.\f.\x.m f (n f x)
macro minus \m.\n.n pred m
macro mult \m.\n.\f.m (n f)
macro exp \m.\n.n m
macro IsZero \n.n (\x.false) true
macro LEQ \m.\n.IsZero (minus m n)
macro EQ \m.\n.and (LEQ m n) (LEQ n m)
macro pair \x.\y.\z.z x y
macro fst \p.p (\x.\y.x)
macro snd \p.p (\x.\y.y)
succ zero
